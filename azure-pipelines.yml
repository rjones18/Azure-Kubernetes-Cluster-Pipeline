trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.0.0'  # specify your desired Terraform version

steps:
# - script: |
#     echo "Install Terraform"
#     wget https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
#     unzip terraform_$(terraformVersion)_linux_amd64.zip
#     sudo mv terraform /usr/local/bin/
#   displayName: 'Install Terraform'

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'terrafromiacdevops1' # Replace with your actual service connection name
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       echo "Logging in to Azure"
#       az account show

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'terrafromiacdevops1'
    backendAzureRmResourceGroupName: 'test-grp'
    backendAzureRmStorageAccountName: 'regterraformstate201'
    backendAzureRmContainerName: 'tfstatefiles'
    backendAzureRmKey: 'az-devops-kubernetes-terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    backendServiceArm: 'terrafromiacdevops1'
    backendAzureRmResourceGroupName: 'test-grp'
    backendAzureRmStorageAccountName: 'regterraformstate201'
    backendAzureRmContainerName: 'tfstatefiles'
    backendAzureRmKey: 'az-devops-kubernetes-terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    backendServiceArm: 'terrafromiacdevops1'
    backendAzureRmResourceGroupName: 'test-grp'
    backendAzureRmStorageAccountName: 'regterraformstate201'
    backendAzureRmContainerName: 'tfstatefiles'
    backendAzureRmKey: 'az-devops-kubernetes-terraform.tfstate'


